{"version":3,"file":"component---src-pages-index-js-0581046ee8013999279b.js","mappings":"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","sources":["webpack://blog/./src/components/Pill.js","webpack://blog/./src/utils/Hex.js","webpack://blog/./src/components/Post.js","webpack://blog/./src/components/Posts.js","webpack://blog/./src/components/Search.js","webpack://blog/./src/pages/index.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { navigate } from 'gatsby';\n\nconst PillStyle = styled.span`\n    max-width: 100px;\n    border-radius: 20px;\n    background-color: ${ props => props.color ? props.color : \"white\" }; \n    font-family: 'Lora';\n    font-size: 1.5rem;\n    padding: 3px 10px 3px 10px;\n    text-transform: capitalize;\n    &:not(:first-child) { \n        margin-left: 10px;\n    }\n    cursor: pointer;\n\n    &:hover {\n        opacity: .8;\n    }\n`\n\nexport default function Pill({color, children}) {\n    return (\n        <PillStyle color={color} onClick={() => navigate(`/search/tag/${children.toLowerCase().replaceAll(' ', '-')}`)}>\n            {children}\n        </PillStyle>\n    )\n}\n","export const hex = {\n    'algorithms': '#B2EBE0',\n    'youtube': '#9DABDD',\n    'hacking': '#FFBFA3',\n    'reading': '#E6B655',\n    'books': '#FED797',\n    'rants': '#D7E7A9',\n    'videos': '#FDBCCF',\n    'reviews': '#F6EAC2',\n    'programming': '#EAEAEA',\n    'objective-c': '#D7E7A9',\n    'tutorials': '#D7E7A9',\n    'databases': '#D7E7A9',\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Pill from './Pill';\nimport { hex } from '../utils/Hex'\nimport { Link as GatsbyLink } from \"gatsby\";\n\nconst StyledLink = styled(GatsbyLink)`\n    display: flex;\n    text-decoration: none;\n    flex-direction: column;\n    width: 100%;\n`;\n\nconst PostContainer = styled.div`\n    width: 100%;\n    display: flex;\n    height: auto;\n    min-height: 80px;\n    justify-content: center;\n    align-items: center;\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid none;\n    animation: fadeIn ease 0.2s;\n    border: 1px solid transparent;\n    border-left: 8px solid transparent;\n    -webkit-animation: fadeIn ease 0.5s;\n    -moz-animation: fadeIn ease 0.5s;\n    -o-animation: fadeIn ease 0.5s;\n    -ms-animation: fadeIn ease 0.5s;\n\n    @keyframes fadeIn {\n        0% {\n            opacity:0;\n        }\n        100% {\n            opacity:1;\n        }\n    }\n\n    @-moz-keyframes fadeIn {\n        0% {\n            opacity:0;\n        }\n        100% {\n            opacity:1;\n        }\n    }\n\n    @-webkit-keyframes fadeIn {\n        0% {\n            opacity:0;\n        }\n        100% {\n            opacity:1;\n        }\n    }\n\n    @-o-keyframes fadeIn {\n        0% {\n            opacity:0;\n        }\n        100% {\n            opacity:1;\n        }\n    }\n\n    @-ms-keyframes fadeIn {\n        0% {\n            opacity:0;\n        }\n        100% {\n            opacity:1;\n        }\n    }\n\n    &:hover {\n        background-color: var(--accent-1); \n        border: 1px solid white;\n        border-left: 8px solid #FFD369;\n        opacity: .8;\n    }\n`\n\nconst PostDate = styled.div`\n    display: flex;\n    width: 20%;\n    height: 100%;\n    align-items: center;\n    justify-content: flex-start;\n    font-family: 'Inconsolata';\n    color: var(--accent-3);\n    font-size: 1.5rem;\n    opacity: .8;\n`\n\nconst PostContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 55%;\n    height: 100%;\n    justify-content: center;\n`\n\nconst PostTitle = styled.span`\n    font-family: 'Inconsolata';\n    font-size: 32px;\n    color: var(--accent-3);\n    display: flex;\n`\n\nconst PostDescription = styled.span`\n    font-family: 'Inconsolata';\n    font-size: 18px;\n    color: var(--accent-2);\n    width: 85%;\n`\n\nconst PostTags = styled.div`\n    display: flex;\n    padding-right: 5px;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 25%;\n    height: 100%;\n`\n\nexport default function Post({ date, title, description, tags }) {\n    const { styledTitle, raw } = title;\n    return (\n        <PostContainer>\n            <PostDate>\n                {date}\n            </PostDate>\n                <PostContent>\n                    <StyledLink to={'/blog/' + raw.replaceAll(' ', '-').toLowerCase()} style={{ textDecoration: 'none' }}>\n                        <PostTitle dangerouslySetInnerHTML={{__html: `${styledTitle}`}}/>\n                        <PostDescription dangerouslySetInnerHTML={{__html: `${description}`}}/>\n                    </StyledLink>\n                </PostContent>\n            <PostTags>\n                {tags.map(tag => <Pill color={hex[tag.toLowerCase().replaceAll(' ', '-')] || 'white'}>{tag}</Pill>)}\n            </PostTags>\n        </PostContainer>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Post from './Post';\nimport '../styles/Search.css'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst PostsContainer = styled.div`\n    width: 100%;\n    display: flex;\n    margin-top: 40px;\n    flex-direction: column;\n`\n\nconst intersect = (post, selected) => {\n    post = post.map(item => item.toLowerCase())\n    selected = selected.map(item => item.toLowerCase())\n    let result = post.filter(function(n) {\n        return selected.indexOf(n) > -1;\n      });\n    \n      return result.length == selected.length;\n}\n\nconst getHighlightedText = (text, highlight) => {\n    if (!highlight || !highlight.trim()) {\n      return text;\n    }\n    const regex = new RegExp(`(${highlight})`, \"gi\");\n    const parts = text.split(regex);\n    const updatedParts = parts\n      .filter((part) => part)\n      .map((part, i) =>\n        regex.test(part) ? {part} : part\n      );\n\n    let newText = \"\";\n    [...updatedParts].map(\n      (parts) => {\n        return (newText =\n          newText +\n          (typeof parts === \"object\"\n            ? `<${parts[\"type\"]} class=\"highlight\">${parts.part}</${parts[\"type\"]}>`\n            : parts))\n        }\n    );\n    return newText;\n  };\n\nexport default function Posts({ filter, selectedTags }) {\n    let { posts } = useStaticQuery(graphql`\n        query AllPosts {\n            posts: allMarkdownRemark {\n                nodes {\n                    id\n                    frontmatter {\n                        title\n                        tags\n                        description\n                        date\n                    }\n                }\n            }\n        }\n    `);\n\n    posts = posts.nodes.map(post => ({...post.frontmatter, id: post.id}))\n    const filterInText = (filter, body) => body.toLowerCase().includes(filter.toLowerCase())\n    return (\n        <PostsContainer>\n            {posts\n                .filter(post => selectedTags.length == 0 || intersect(post.tags, selectedTags))\n                .filter(post => filter === undefined \n                    || filterInText(filter, post.title) \n                    || filterInText(filter, post.description))\n                .map(post =>  \n                    <Post \n                        date={post.date} \n                        title={{styledTitle: getHighlightedText(post.title, filter), raw: post.title}} \n                        description={getHighlightedText(post.description, filter)} \n                        tags={post.tags}\n                        key={post.id}\n                    /> \n                )}\n        </PostsContainer>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Input = styled.input`\n    color: var(--accent-3);\n    border: 1px solid #F7F7F7;\n    min-height: 40px;\n    margin-top: 30px;\n    font-family: 'Lora';\n    font-size: 1.5rem;\n    align-content: center;\n    justify-content: center;\n    background: var(--accent-1);\n    width: 100%;\n    padding-left: 20px;\n    opacity: .7;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport default function Search({ onChange }) {\n    return (\n        <Input type=\"text\" \n            placeholder=\"Search...\" \n            onChange={(e) => onChange(e.target.value)} />\n    )\n}\n","import React, { useState } from 'react'\nimport Layout from '../components/Layout';\nimport Tags from '../components/Tags';\nimport Posts from '../components/Posts';\nimport Search from '../components/Search';\nimport { graphql, useStaticQuery } from 'gatsby'\n\nexport default function HomePage() {\n  const [searchValue, setSearchValue] = useState()\n  const [selectedTags, setSelectedTags] = useState([])\n\n  const data = useStaticQuery(graphql`\n  query Taggregator {\n    allMarkdownRemark {\n      nodes {\n        frontmatter {\n          tags\n        }\n      }\n    }\n  }\n`)\n\n  const tags = [...new Set(data.allMarkdownRemark.nodes.map(node => node.frontmatter.tags).flatMap(item => item))]\n\n  return (\n    <Layout>\n      <Tags setSelectedTags={setSelectedTags} selectedTags={selectedTags} tags={tags}>\n        <Search onChange={setSearchValue} />\n      </Tags>\n      <Posts filter={searchValue} selectedTags={selectedTags} /> \n    </Layout>\n  )\n}"],"names":["PillStyle","styled","props","color","Pill","children","onClick","navigate","toLowerCase","replaceAll","hex","StyledLink","GatsbyLink","PostContainer","PostDate","PostContent","PostTitle","PostDescription","PostTags","Post","date","title","description","tags","styledTitle","raw","to","style","textDecoration","dangerouslySetInnerHTML","__html","map","tag","PostsContainer","getHighlightedText","text","highlight","trim","regex","RegExp","updatedParts","split","filter","part","i","test","newText","parts","Posts","selectedTags","posts","useStaticQuery","nodes","post","frontmatter","id","filterInText","body","includes","length","selected","item","n","indexOf","intersect","undefined","key","Input","Search","onChange","type","placeholder","e","target","value","HomePage","useState","searchValue","setSearchValue","setSelectedTags","data","Set","allMarkdownRemark","node","flatMap","Layout","Tags"],"sourceRoot":""}