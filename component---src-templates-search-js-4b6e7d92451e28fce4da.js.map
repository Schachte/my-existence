{"version":3,"file":"component---src-templates-search-js-4b6e7d92451e28fce4da.js","mappings":"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","sources":["webpack://blog/./src/components/Layout.js","webpack://blog/./src/templates/search.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport 'normalize.css'\nimport '../styles/duotone.css'\nimport styled from 'styled-components'\nimport { Link as GatsbyLink, Link } from \"gatsby\";\nimport { ThemeContext } from \"../context/ThemeContext\"\n\nimport '../styles/GlobalStyles.css';\n\nconst StyledLink = styled(GatsbyLink)`\n    display: flex;\n    text-decoration: none;\n    flex-direction: column;\n    width: 100%;\n    color: var(--accent-3);\n\n    &[type=twitter]:hover {\n        color: #1DA1F2;\n    }\n`;\n\nconst MainContainerStyles = styled.div` \n    display: flex;\n    width: 100%;\n    max-width: 1200px;\n    min-width: 500px;\n    margin: 0 auto;\n    flex-wrap: wrap;\n    font-size: 16px;\n`\n\nconst MainLogoStyles = styled.div` \n    display: flex;\n    flex-direction: column;\n    height: auto;\n    margin-top: 25px;\n    flex-basis: 100%;\n    width: 100%;\n`\n\nconst MainFooterStyles = styled.span`\n    display: flex;\n    justify-content: center;\n    height: auto;\n    margin-top: 25px;\n    flex-basis: 100%;\n    font-family: 'Lora';\n    color: var(--accent-3);\n    font-size: 1.5rem;\n    padding: 20px;\n    width: 100%;\n`\n\nconst Squiggly = styled.span`\n    text-decoration: underline wavy ${props => props.color || 'magenta'};\n    margin-left: 5px;\n\n    &:hover {\n        text-decoration-thickness: 1.5px;\n    }\n`\n\nconst LogoTop = styled.div`\n    width: 100%;\n`\n\nconst LogoBottom = styled.div`\n    transform: translateY(-10px);\n    width: 100%;\n`\n\nconst NameSpan = styled.span`\n    color: var(--accent-2);\n    padding-left: 10px;\n`\n\nconst LogoH1 = styled.span`\n    & {\n        text-transform: uppercase;\n        font-family: 'Montserrat';\n        font-size: 50px;\n        font-weight: 500;\n        letter-spacing: -3px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: var(--accent-3);\n\n    }\n\n    &:before,\n    &:after {\n        content: '';\n        border-top: 1px solid white;\n        margin: 0 20px 0 0;\n        flex: 1 0 20px;\n    }\n\n    &:after {\n        margin: 0 0 0 20px;\n    }\n`\n\nconst LogoH3 = styled.div`\n    text-transform: lowercase;\n    font-family: 'Lora';\n    font-size: 30px;\n    font-weight: 400;\n    color: var(--accent-3);\n    font-style: italic;\n    display: flex;\n    width: 100%;\n\n    & > :first-child:hover {\n        color: var(--accent-2);\n    }\n`\n\nconst LogoH3Span = styled.button`\n    all: unset;\n    cursor: pointer;\n    display: flex;\n    flex-grow: ${props => props.grow || 1};\n    justify-content: ${props => props.alignment || 'center'}; \n    font-size: ${props => props.fontSize || 'inherit'};\n\n    &:hover {\n        color: var(--accent-2);\n    }\n`\n\nconst NavDivBlock = styled.div`\n    display: flex;\n    justify-content: right;\n    text-align: right;\n    width: ${props => props.width || '50%'};\n`\n\nconst SpanLink = styled.span`\n    font-size: 25px;\n    width: auto;\n    &:not(:last-child) {\n        padding-right: 20px;\n    }\n`\n\nconst CopySpan = styled.span`\n    display:inline-block;\n    transform: rotate(180deg);\n  }\n`\n\nexport default function Layout({ children }) {\n    // const { pathname } = window.location;\n    const pathname = \"ryan\"\n    const { theme, toggle } = useContext(ThemeContext);\n\n    useEffect(()  => {\n        document.body.classList.add(theme);\n        return () => document.body.classList.remove(theme);\n    });\n\n    return (\n        <MainContainerStyles>\n            <MainLogoStyles>\n                <StyledLink to={'/'}>\n                    <LogoTop>\n                        <LogoH1>ryan <NameSpan>schachte</NameSpan></LogoH1>\n                    </LogoTop>\n                </StyledLink>\n                <LogoBottom>\n                    <LogoH3>\n                        <NavDivBlock width={'25%'}>\n                            {pathname != '/' ? <LogoH3Span fontSize=\"25px\" alignment=\"left\" onClick={() => window.history.back()}>Previous</LogoH3Span> : <LogoH3Span></LogoH3Span>}\n                        </NavDivBlock>\n                        <NavDivBlock>\n                        <StyledLink to={'/'}>\n                            <LogoH3Span>engineer, educator, reader, runner</LogoH3Span>\n                        </StyledLink>\n                        </NavDivBlock>\n                        <NavDivBlock width='25%'>\n                            <SpanLink>\n                                <LogoH3Span onClick={toggle}>Theme</LogoH3Span>\n                            </SpanLink>\n                            <SpanLink><StyledLink to={'https://Twitter.com/thesimpengineer'} type={\"twitter\"}>Tweet</StyledLink></SpanLink>\n                        </NavDivBlock>\n                    </LogoH3>\n                </LogoBottom>\n            </MainLogoStyles>\n            { children }\n            <MainFooterStyles>Built &amp; Designed By <Squiggly><StyledLink to={'https://google.com'}>Ryan Schachte</StyledLink></Squiggly>- <CopySpan>&copy;</CopySpan> Copyleft {new Date().getFullYear()} - <Squiggly color=\"orange\"><StyledLink to={'https://google.com'}>Fork Me</StyledLink></Squiggly></MainFooterStyles>\n        </MainContainerStyles>\n    )\n}\n","import React from 'react'\nimport Layout from '../components/Layout';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { navigate } from 'gatsby';\n\nconst SearchHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  font-family: 'Source Sans Pro';\n  font-weight: 700;\n  font-size: 50px;\n  color: var(--accent-3);\n  margin-top: 35px;\n`\n\nconst SearchResultsStyle = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  font-family: 'Lora';\n  font-size: 2rem;\n  color: var(--accent-3);\n  margin-top: 25px;\n  font-style: italic;\n`\n\nconst ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  height: 500px;\n  margin: 0 auto;\n  margin-top: 25px;\n`\n\nconst SearchResult = styled.div`\n  width: 100%;\n  border: 2px solid white;\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 30px;\n  margin-top: 20px;\n  cursor: pointer;\n\n  &:hover {\n    border: 2px solid var(--accent-2);\n    background-color: var(--accent-1);\n  }\n`\n\nconst SearchDate = styled.span`\n  color: var(--accent-3);\n  font-family: 'Inconsolata';\n  font-size: 1.5rem;\n`\n\nconst SearchTitle = styled.span`\n  color: var(--accent-3);\n  font-family: 'Lora';\n`\n\nconst YellowSpan = styled.span`\n    color: var(--accent-2);\n    padding-left: 1.5rem;\n    text-transform: capitalize;\n`\n\nconst loadPage = (location) => navigate(location)\n\nexport default function Search({ data }) {\n\n  const resultantSearchData = [\n    ...data.allMarkdownRemark.nodes.map(node => node.frontmatter)\n  ]\n\n  // const tagName = window.location.pathname\n  //                       .split(\"/\")\n  //                       .splice(-1)[0]\n\n  const tagName = \"ryan\"\n\n  return (\n      <Layout>\n        <SearchHeader>Tag Results For <YellowSpan>{tagName}</YellowSpan></SearchHeader>\n        <SearchResultsStyle>{resultantSearchData.length} Search Results Found</SearchResultsStyle>\n        <ResultContainer>\n            {resultantSearchData.map(result => {\n              return (\n                <SearchResult onClick={() => loadPage('/blog/' + result.title.toLowerCase().replaceAll(' ', '-'))}>\n                  <SearchDate>{result.date}</SearchDate>\n                  <SearchTitle><i>{result.title}</i></SearchTitle>\n                </SearchResult>\n              )\n            })}\n        </ResultContainer>\n      </Layout>\n  )\n}\n \nexport const pageResults = graphql`\n  query SearchResults($tag: String = \"\") {\n    allMarkdownRemark(filter: {frontmatter: {tags: {in: [$tag]}}}) {\n      nodes {\n        frontmatter {\n          title\n          date\n        }\n      }\n    }\n  }\n`\n\n"],"names":["StyledLink","styled","GatsbyLink","MainContainerStyles","MainLogoStyles","MainFooterStyles","Squiggly","props","color","LogoTop","LogoBottom","NameSpan","LogoH1","LogoH3","LogoH3Span","grow","alignment","fontSize","NavDivBlock","width","SpanLink","CopySpan","Layout","children","useContext","ThemeContext","theme","toggle","useEffect","document","body","classList","add","remove","to","onClick","window","history","back","type","Date","getFullYear","SearchHeader","SearchResultsStyle","ResultContainer","SearchResult","SearchDate","SearchTitle","YellowSpan","Search","data","resultantSearchData","allMarkdownRemark","nodes","map","node","frontmatter","length","result","location","title","toLowerCase","replaceAll","navigate","date"],"sourceRoot":""}