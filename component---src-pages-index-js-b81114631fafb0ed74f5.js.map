{"version":3,"file":"component---src-pages-index-js-b81114631fafb0ed74f5.js","mappings":"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","sources":["webpack://blog/./src/components/Layout.js","webpack://blog/./src/components/Pill.js","webpack://blog/./src/utils/Hex.js","webpack://blog/./src/components/Post.js","webpack://blog/./src/components/Posts.js","webpack://blog/./src/components/Search.js","webpack://blog/./src/pages/index.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport 'normalize.css'\nimport '../styles/duotone.css'\nimport styled from 'styled-components'\nimport { Link as GatsbyLink, Link } from \"gatsby\";\nimport { ThemeContext } from \"../context/ThemeContext\"\n\nimport '../styles/GlobalStyles.css';\n\nconst StyledLink = styled(GatsbyLink)`\n    display: flex;\n    text-decoration: none;\n    flex-direction: column;\n    width: 100%;\n    color: var(--accent-3);\n\n    &[type=twitter]:hover {\n        color: #1DA1F2;\n    }\n`;\n\nconst MainContainerStyles = styled.div` \n    display: flex;\n    width: 100%;\n    max-width: 1200px;\n    min-width: 500px;\n    margin: 0 auto;\n    flex-wrap: wrap;\n    font-size: 16px;\n`\n\nconst MainLogoStyles = styled.div` \n    display: flex;\n    flex-direction: column;\n    height: auto;\n    margin-top: 25px;\n    flex-basis: 100%;\n    width: 100%;\n`\n\nconst MainFooterStyles = styled.span`\n    display: flex;\n    justify-content: center;\n    height: auto;\n    margin-top: 25px;\n    flex-basis: 100%;\n    font-family: 'Lora';\n    color: var(--accent-3);\n    font-size: 1.5rem;\n    padding: 20px;\n    width: 100%;\n`\n\nconst Squiggly = styled.span`\n    text-decoration: underline wavy ${props => props.color || 'magenta'};\n    margin-left: 5px;\n\n    &:hover {\n        text-decoration-thickness: 1.5px;\n    }\n`\n\nconst LogoTop = styled.div`\n    width: 100%;\n`\n\nconst LogoBottom = styled.div`\n    transform: translateY(-10px);\n    width: 100%;\n`\n\nconst NameSpan = styled.span`\n    color: var(--accent-2);\n    padding-left: 10px;\n`\n\nconst LogoH1 = styled.span`\n    & {\n        text-transform: uppercase;\n        font-family: 'Montserrat';\n        font-size: 50px;\n        font-weight: 500;\n        letter-spacing: -3px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: var(--accent-3);\n\n    }\n\n    &:before,\n    &:after {\n        content: '';\n        border-top: 1px solid white;\n        margin: 0 20px 0 0;\n        flex: 1 0 20px;\n    }\n\n    &:after {\n        margin: 0 0 0 20px;\n    }\n`\n\nconst LogoH3 = styled.div`\n    text-transform: lowercase;\n    font-family: 'Lora';\n    font-size: 30px;\n    font-weight: 400;\n    color: var(--accent-3);\n    font-style: italic;\n    display: flex;\n    width: 100%;\n\n    & > :first-child:hover {\n        color: var(--accent-2);\n    }\n`\n\nconst LogoH3Span = styled.button`\n    all: unset;\n    cursor: pointer;\n    display: flex;\n    flex-grow: ${props => props.grow || 1};\n    justify-content: ${props => props.alignment || 'center'}; \n    font-size: ${props => props.fontSize || 'inherit'};\n\n    &:hover {\n        color: var(--accent-2);\n    }\n`\n\nconst NavDivBlock = styled.div`\n    display: flex;\n    justify-content: right;\n    text-align: right;\n    width: ${props => props.width || '50%'};\n`\n\nconst SpanLink = styled.span`\n    font-size: 25px;\n    width: auto;\n    &:not(:last-child) {\n        padding-right: 20px;\n    }\n`\n\nconst CopySpan = styled.span`\n    display:inline-block;\n    transform: rotate(180deg);\n  }\n`\n\nexport default function Layout({ children }) {\n    // const { pathname } = window.location;\n    const pathname = \"ryan\"\n    const { theme, toggle } = useContext(ThemeContext);\n\n    useEffect(()  => {\n        document.body.classList.add(theme);\n        return () => document.body.classList.remove(theme);\n    });\n\n    return (\n        <MainContainerStyles>\n            <MainLogoStyles>\n                <StyledLink to={'/'}>\n                    <LogoTop>\n                        <LogoH1>ryan <NameSpan>schachte</NameSpan></LogoH1>\n                    </LogoTop>\n                </StyledLink>\n                <LogoBottom>\n                    <LogoH3>\n                        <NavDivBlock width={'25%'}>\n                            {pathname != '/' ? <LogoH3Span fontSize=\"25px\" alignment=\"left\" onClick={() => window.history.back()}>Previous</LogoH3Span> : <LogoH3Span></LogoH3Span>}\n                        </NavDivBlock>\n                        <NavDivBlock>\n                        <StyledLink to={'/'}>\n                            <LogoH3Span>engineer, educator, reader, runner</LogoH3Span>\n                        </StyledLink>\n                        </NavDivBlock>\n                        <NavDivBlock width='25%'>\n                            <SpanLink>\n                                <LogoH3Span onClick={toggle}>Theme</LogoH3Span>\n                            </SpanLink>\n                            <SpanLink><StyledLink to={'https://Twitter.com/thesimpengineer'} type={\"twitter\"}>Tweet</StyledLink></SpanLink>\n                        </NavDivBlock>\n                    </LogoH3>\n                </LogoBottom>\n            </MainLogoStyles>\n            { children }\n            <MainFooterStyles>Built &amp; Designed By <Squiggly><StyledLink to={'https://google.com'}>Ryan Schachte</StyledLink></Squiggly>- <CopySpan>&copy;</CopySpan> Copyleft {new Date().getFullYear()} - <Squiggly color=\"orange\"><StyledLink to={'https://google.com'}>Fork Me</StyledLink></Squiggly></MainFooterStyles>\n        </MainContainerStyles>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { navigate } from 'gatsby';\n\nconst PillStyle = styled.span`\n    max-width: 100px;\n    border-radius: 20px;\n    background-color: ${ props => props.color ? props.color : \"white\" }; \n    font-family: 'Lora';\n    font-size: 1.5rem;\n    padding: 3px 10px 3px 10px;\n    text-transform: capitalize;\n    &:not(:first-child) { \n        margin-left: 10px;\n    }\n    cursor: pointer;\n\n    &:hover {\n        opacity: .8;\n    }\n`\n\nexport default function Pill({color, children}) {\n    return (\n        <PillStyle color={color} onClick={() => navigate(`/search/tag/${children.toLowerCase().replaceAll(' ', '-')}`)}>\n            {children}\n        </PillStyle>\n    )\n}\n","export const hex = {\n    'algorithms': '#B2EBE0',\n    'youtube': '#9DABDD',\n    'hacking': '#FFBFA3',\n    'reading': '#E6B655',\n    'books': '#FED797',\n    'rants': '#D7E7A9',\n    'videos': '#FDBCCF',\n    'reviews': '#F6EAC2',\n    'programming': '#EAEAEA',\n    'objective-c': '#D7E7A9',\n    'tutorials': '#D7E7A9',\n    'databases': '#D7E7A9',\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Pill from './Pill';\nimport { hex } from '../utils/Hex'\nimport { Link as GatsbyLink } from \"gatsby\";\n\nconst StyledLink = styled(GatsbyLink)`\n    display: flex;\n    text-decoration: none;\n    flex-direction: column;\n    width: 100%;\n`;\n\nconst PostContainer = styled.div`\n    width: 100%;\n    display: flex;\n    height: auto;\n    min-height: 80px;\n    justify-content: center;\n    align-items: center;\n    margin-top: 20px;\n    padding: 10px;\n    border: 1px solid none;\n    animation: fadeIn ease 0.2s;\n    border: 1px solid transparent;\n    border-left: 8px solid transparent;\n    -webkit-animation: fadeIn ease 0.5s;\n    -moz-animation: fadeIn ease 0.5s;\n    -o-animation: fadeIn ease 0.5s;\n    -ms-animation: fadeIn ease 0.5s;\n\n    @keyframes fadeIn {\n        0% {\n            opacity:0;\n        }\n        100% {\n            opacity:1;\n        }\n    }\n\n    @-moz-keyframes fadeIn {\n        0% {\n            opacity:0;\n        }\n        100% {\n            opacity:1;\n        }\n    }\n\n    @-webkit-keyframes fadeIn {\n        0% {\n            opacity:0;\n        }\n        100% {\n            opacity:1;\n        }\n    }\n\n    @-o-keyframes fadeIn {\n        0% {\n            opacity:0;\n        }\n        100% {\n            opacity:1;\n        }\n    }\n\n    @-ms-keyframes fadeIn {\n        0% {\n            opacity:0;\n        }\n        100% {\n            opacity:1;\n        }\n    }\n\n    &:hover {\n        background-color: var(--accent-1); \n        border: 1px solid white;\n        border-left: 8px solid #FFD369;\n        opacity: .8;\n    }\n`\n\nconst PostDate = styled.div`\n    display: flex;\n    width: 20%;\n    height: 100%;\n    align-items: center;\n    justify-content: flex-start;\n    font-family: 'Inconsolata';\n    color: var(--accent-3);\n    font-size: 1.5rem;\n    opacity: .8;\n`\n\nconst PostContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 55%;\n    height: 100%;\n    justify-content: center;\n`\n\nconst PostTitle = styled.span`\n    font-family: 'Inconsolata';\n    font-size: 32px;\n    color: var(--accent-3);\n    display: flex;\n`\n\nconst PostDescription = styled.span`\n    font-family: 'Inconsolata';\n    font-size: 18px;\n    color: var(--accent-2);\n    width: 85%;\n`\n\nconst PostTags = styled.div`\n    display: flex;\n    padding-right: 5px;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 25%;\n    height: 100%;\n`\n\nexport default function Post({ date, title, description, tags }) {\n    const { styledTitle, raw } = title;\n    return (\n        <PostContainer>\n            <PostDate>\n                {date}\n            </PostDate>\n                <PostContent>\n                    <StyledLink to={'/blog/' + raw.replaceAll(' ', '-').toLowerCase()} style={{ textDecoration: 'none' }}>\n                        <PostTitle dangerouslySetInnerHTML={{__html: `${styledTitle}`}}/>\n                        <PostDescription dangerouslySetInnerHTML={{__html: `${description}`}}/>\n                    </StyledLink>\n                </PostContent>\n            <PostTags>\n                {tags.map(tag => <Pill color={hex[tag.toLowerCase().replaceAll(' ', '-')] || 'white'}>{tag}</Pill>)}\n            </PostTags>\n        </PostContainer>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Post from './Post';\nimport '../styles/Search.css'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst PostsContainer = styled.div`\n    width: 100%;\n    display: flex;\n    margin-top: 40px;\n    flex-direction: column;\n`\n\nconst intersect = (post, selected) => {\n    post = post.map(item => item.toLowerCase())\n    selected = selected.map(item => item.toLowerCase())\n    let result = post.filter(function(n) {\n        return selected.indexOf(n) > -1;\n      });\n    \n      return result.length == selected.length;\n}\n\nconst getHighlightedText = (text, highlight) => {\n    if (!highlight || !highlight.trim()) {\n      return text;\n    }\n    const regex = new RegExp(`(${highlight})`, \"gi\");\n    const parts = text.split(regex);\n    const updatedParts = parts\n      .filter((part) => part)\n      .map((part, i) =>\n        regex.test(part) ? {part} : part\n      );\n\n    let newText = \"\";\n    [...updatedParts].map(\n      (parts) => {\n        return (newText =\n          newText +\n          (typeof parts === \"object\"\n            ? `<${parts[\"type\"]} class=\"highlight\">${parts.part}</${parts[\"type\"]}>`\n            : parts))\n        }\n    );\n    return newText;\n  };\n\nexport default function Posts({ filter, selectedTags }) {\n    let { posts } = useStaticQuery(graphql`\n        query AllPosts {\n            posts: allMarkdownRemark {\n                nodes {\n                    id\n                    frontmatter {\n                        title\n                        tags\n                        description\n                        date\n                    }\n                }\n            }\n        }\n    `);\n\n    posts = posts.nodes.map(post => ({...post.frontmatter, id: post.id}))\n    const filterInText = (filter, body) => body.toLowerCase().includes(filter.toLowerCase())\n    return (\n        <PostsContainer>\n            {posts\n                .filter(post => selectedTags.length == 0 || intersect(post.tags, selectedTags))\n                .filter(post => filter === undefined \n                    || filterInText(filter, post.title) \n                    || filterInText(filter, post.description))\n                .map(post =>  \n                    <Post \n                        date={post.date} \n                        title={{styledTitle: getHighlightedText(post.title, filter), raw: post.title}} \n                        description={getHighlightedText(post.description, filter)} \n                        tags={post.tags}\n                        key={post.id}\n                    /> \n                )}\n        </PostsContainer>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Input = styled.input`\n    color: var(--accent-3);\n    border: 1px solid #F7F7F7;\n    min-height: 40px;\n    margin-top: 30px;\n    font-family: 'Lora';\n    font-size: 1.5rem;\n    align-content: center;\n    justify-content: center;\n    background: var(--accent-1);\n    width: 100%;\n    padding-left: 20px;\n    opacity: .7;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport default function Search({ onChange }) {\n    return (\n        <Input type=\"text\" \n            placeholder=\"Search...\" \n            onChange={(e) => onChange(e.target.value)} />\n    )\n}\n","import React, { useState } from 'react'\nimport Layout from '../components/Layout';\nimport Tags from '../components/Tags';\nimport Posts from '../components/Posts';\nimport Search from '../components/Search';\nimport { graphql, useStaticQuery } from 'gatsby'\n\nexport default function HomePage() {\n  const [searchValue, setSearchValue] = useState()\n  const [selectedTags, setSelectedTags] = useState([])\n\n  const data = useStaticQuery(graphql`\n  query Taggregator {\n    allMarkdownRemark {\n      nodes {\n        frontmatter {\n          tags\n        }\n      }\n    }\n  }\n`)\n\n  const tags = [...new Set(data.allMarkdownRemark.nodes.map(node => node.frontmatter.tags).flatMap(item => item))]\n\n  return (\n    <Layout>\n      <Tags setSelectedTags={setSelectedTags} selectedTags={selectedTags} tags={tags}>\n        <Search onChange={setSearchValue} />\n      </Tags>\n      <Posts filter={searchValue} selectedTags={selectedTags} /> \n    </Layout>\n  )\n}"],"names":["StyledLink","styled","GatsbyLink","MainContainerStyles","MainLogoStyles","MainFooterStyles","Squiggly","props","color","LogoTop","LogoBottom","NameSpan","LogoH1","LogoH3","LogoH3Span","grow","alignment","fontSize","NavDivBlock","width","SpanLink","CopySpan","Layout","children","useContext","ThemeContext","theme","toggle","useEffect","document","body","classList","add","remove","to","onClick","window","history","back","type","Date","getFullYear","PillStyle","Pill","navigate","toLowerCase","replaceAll","hex","PostContainer","PostDate","PostContent","PostTitle","PostDescription","PostTags","Post","date","title","description","tags","styledTitle","raw","style","textDecoration","dangerouslySetInnerHTML","__html","map","tag","PostsContainer","getHighlightedText","text","highlight","trim","regex","RegExp","updatedParts","split","filter","part","i","test","newText","parts","Posts","selectedTags","posts","useStaticQuery","nodes","post","frontmatter","id","filterInText","includes","length","selected","item","n","indexOf","intersect","undefined","key","Input","Search","onChange","placeholder","e","target","value","HomePage","useState","searchValue","setSearchValue","setSelectedTags","data","Set","allMarkdownRemark","node","flatMap","Tags"],"sourceRoot":""}