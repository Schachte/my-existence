{"version":3,"file":"component---src-templates-post-js-b3b9f90129b30273840b.js","mappings":"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","sources":["webpack://blog/./src/components/Layout.js","webpack://blog/./src/components/Tag.js","webpack://blog/./src/components/Tags.js","webpack://blog/./src/components/BlogPost.js","webpack://blog/./src/templates/post.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport 'normalize.css'\nimport '../styles/duotone.css'\nimport styled from 'styled-components'\nimport { Link as GatsbyLink, Link } from \"gatsby\";\nimport { ThemeContext } from \"../context/ThemeContext\"\n\nimport '../styles/GlobalStyles.css';\n\nconst StyledLink = styled(GatsbyLink)`\n    display: flex;\n    text-decoration: none;\n    flex-direction: column;\n    width: 100%;\n    color: var(--accent-3);\n\n    &[type=twitter]:hover {\n        color: #1DA1F2;\n    }\n`;\n\nconst MainContainerStyles = styled.div` \n    display: flex;\n    width: 100%;\n    max-width: 1200px;\n    min-width: 500px;\n    margin: 0 auto;\n    flex-wrap: wrap;\n    font-size: 16px;\n`\n\nconst MainLogoStyles = styled.div` \n    display: flex;\n    flex-direction: column;\n    height: auto;\n    margin-top: 25px;\n    flex-basis: 100%;\n    width: 100%;\n`\n\nconst MainFooterStyles = styled.span`\n    display: flex;\n    justify-content: center;\n    height: auto;\n    margin-top: 25px;\n    flex-basis: 100%;\n    font-family: 'Lora';\n    color: var(--accent-3);\n    font-size: 1.5rem;\n    padding: 20px;\n    width: 100%;\n`\n\nconst Squiggly = styled.span`\n    text-decoration: underline wavy ${props => props.color || 'magenta'};\n    margin-left: 5px;\n\n    &:hover {\n        text-decoration-thickness: 1.5px;\n    }\n`\n\nconst LogoTop = styled.div`\n    width: 100%;\n`\n\nconst LogoBottom = styled.div`\n    transform: translateY(-10px);\n    width: 100%;\n`\n\nconst NameSpan = styled.span`\n    color: var(--accent-2);\n    padding-left: 10px;\n`\n\nconst LogoH1 = styled.span`\n    & {\n        text-transform: uppercase;\n        font-family: 'Montserrat';\n        font-size: 50px;\n        font-weight: 500;\n        letter-spacing: -3px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: var(--accent-3);\n\n    }\n\n    &:before,\n    &:after {\n        content: '';\n        border-top: 1px solid white;\n        margin: 0 20px 0 0;\n        flex: 1 0 20px;\n    }\n\n    &:after {\n        margin: 0 0 0 20px;\n    }\n`\n\nconst LogoH3 = styled.div`\n    text-transform: lowercase;\n    font-family: 'Lora';\n    font-size: 30px;\n    font-weight: 400;\n    color: var(--accent-3);\n    font-style: italic;\n    display: flex;\n    width: 100%;\n\n    & > :first-child:hover {\n        color: var(--accent-2);\n    }\n`\n\nconst LogoH3Span = styled.button`\n    all: unset;\n    cursor: pointer;\n    display: flex;\n    flex-grow: ${props => props.grow || 1};\n    justify-content: ${props => props.alignment || 'center'}; \n    font-size: ${props => props.fontSize || 'inherit'};\n\n    &:hover {\n        color: var(--accent-2);\n    }\n`\n\nconst NavDivBlock = styled.div`\n    display: flex;\n    justify-content: right;\n    text-align: right;\n    width: ${props => props.width || '50%'};\n`\n\nconst SpanLink = styled.span`\n    font-size: 25px;\n    width: auto;\n    &:not(:last-child) {\n        padding-right: 20px;\n    }\n`\n\nconst CopySpan = styled.span`\n    display:inline-block;\n    transform: rotate(180deg);\n  }\n`\n\nexport default function Layout({ children }) {\n    // const { pathname } = window.location;\n    const pathname = \"ryan\"\n    const { theme, toggle } = useContext(ThemeContext);\n\n    useEffect(()  => {\n        document.body.classList.add(theme);\n        return () => document.body.classList.remove(theme);\n    });\n\n    return (\n        <MainContainerStyles>\n            <MainLogoStyles>\n                <StyledLink to={'/'}>\n                    <LogoTop>\n                        <LogoH1>ryan <NameSpan>schachte</NameSpan></LogoH1>\n                    </LogoTop>\n                </StyledLink>\n                <LogoBottom>\n                    <LogoH3>\n                        <NavDivBlock width={'25%'}>\n                            {pathname != '/' ? <LogoH3Span fontSize=\"25px\" alignment=\"left\" onClick={() => window.history.back()}>Previous</LogoH3Span> : <LogoH3Span></LogoH3Span>}\n                        </NavDivBlock>\n                        <NavDivBlock>\n                        <StyledLink to={'/'}>\n                            <LogoH3Span>engineer, educator, reader, runner</LogoH3Span>\n                        </StyledLink>\n                        </NavDivBlock>\n                        <NavDivBlock width='25%'>\n                            <SpanLink>\n                                <LogoH3Span onClick={toggle}>Theme</LogoH3Span>\n                            </SpanLink>\n                            <SpanLink><StyledLink to={'https://Twitter.com/thesimpengineer'} type={\"twitter\"}>Tweet</StyledLink></SpanLink>\n                        </NavDivBlock>\n                    </LogoH3>\n                </LogoBottom>\n            </MainLogoStyles>\n            { children }\n            <MainFooterStyles>Built &amp; Designed By <Squiggly><StyledLink to={'https://google.com'}>Ryan Schachte</StyledLink></Squiggly>- <CopySpan>&copy;</CopySpan> Copyleft {new Date().getFullYear()} - <Squiggly color=\"orange\"><StyledLink to={'https://google.com'}>Fork Me</StyledLink></Squiggly></MainFooterStyles>\n        </MainContainerStyles>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst TagStyle = styled.span`\n    cursor: pointer;\n    border: 1px solid white;\n    justify-content: space-between;\n    font-family: 'Lora';\n    color: ${props => props.selected ? '#1F1F1F' : 'white'};\n    background-color: ${props => props.selected ? 'white' : 'transparent'};\n    font-size: 15px;\n    padding: 10px;\n    text-align: center;\n    min-width: 30px;\n    width: 90px;\n    margin-right: 10px;\n\n    &:hover {\n        color: var(--accent-1);\n        background-color: var(--accent-3);\n    }\n`\n\nconst TagText = styled.span`\n    text-transform: capitalize;\n`\n\nexport default function Tag({ children, selected, onClick }) {\n    return (\n        <TagStyle onClick={onClick} selected={selected} bgColor={children}>\n            <TagText>{ children }</TagText>\n        </TagStyle>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Tag from './Tag'\n\nconst TagsContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    flex-wrap: wrap;\n    margin-top: 25px;\n`\n\nconst toggleSelectedTag = (selectedTags, tagName, setSelectedTags) => {\n    if (selectedTags.includes(tagName)) {\n        setSelectedTags(selectedTags.filter(tag => tag != tagName))\n        return\n    }\n    setSelectedTags([...selectedTags, tagName])\n}\n\nexport default function Tags({ children, selectedTags, setSelectedTags, tags=[], clickEvent=toggleSelectedTag }) {\n    return (\n        <>\n            <TagsContainer>\n                {tags.map(tag => <Tag onClick={() => clickEvent(selectedTags, tag, setSelectedTags)} selected={selectedTags.includes(tag)}>{tag}</Tag>)}\n            </TagsContainer>\n            {children}\n        </>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components';\nimport '../styles/Blog.css'\nimport Tags from './Tags';\nimport { navigate } from 'gatsby';\nimport { Link as GatsbyLink } from \"gatsby\";\n\nconst StyledLink = styled(GatsbyLink)`\n    display: flex;\n    text-decoration: none;\n    flex-direction: column;\n    width: 100%;\n    align-items: center;\n    color: var(--accent-3);\n\n    &:visited {\n        text-decoration: none;\n    }\n`;\n\nconst PostHeading = styled.div`\n    margin-top: 55px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n`\n\nconst PostHeadSubStyle = styled.span`\n    margin-top: 10px;\n    align-items: center;\n    font-family: 'Source Sans Pro';\n    font-weight: 100;\n    font-size: 2.5rem;\n    color: var(--accent-2);\n`\n\nconst PostHeadMain = styled.span`\n    letter-spacing: -2px;\n    align-items: center;\n    color: var(--accent-3);\n    font-family: 'Source Sans Pro';\n    font-weight: 700;\n    font-size: 5.125rem;\n    text-transform: capitalize;\n`\n\nconst PostHeadAuthor = styled.span`\n    align-items: center;\n    font-family: 'Source Sans Pro';\n    font-weight: 600;\n    font-size: 2.25rem;\n    margin-top: 20px;\n    color: var(--accent-3);\n`\n\nconst AuthorSpan = styled.span`\n    color: var(--accent-3);\n    display: inline-block;\n    text-decoration: none;\n    border-bottom: 5px solid #F2F2A7;\n    margin-top: 20px;\n`\n\nconst TagManager = styled.div`\n    display: flex;\n    justify-content: center;\n    width: 45%;\n`\n\nexport default function BlogPost({ title, description, date, tags}) {\n    return (\n        <PostHeading>\n            <PostHeadMain>{title}</PostHeadMain>\n            <PostHeadSubStyle>{description}</PostHeadSubStyle>\n            <TagManager>\n                <Tags selectedTags={[]} tags={tags} clickEvent={(nil1, tag, nil2) => navigate(`/search/tag/${tag.replaceAll(' ', '-').toLowerCase()}`)}/>\n            </TagManager>\n            <PostHeadAuthor>Written By <AuthorSpan><StyledLink to={'https://Twitter.com/TheSimpEngineer'}>Ryan Schachte</StyledLink></AuthorSpan> on {date}</PostHeadAuthor>\n        </PostHeading>\n\n    )\n}\n","import React from 'react'\nimport Layout from '../components/Layout';\nimport { graphql } from 'gatsby';\nimport BlogPost from '../components/BlogPost';\n\nexport default function Post({ data }) {\n    const { title, description, date, tags } = data.markdownRemark.frontmatter\n    const { html } = data.markdownRemark\n\n    return (\n        <Layout>\n            <BlogPost title={title} description={description} date={date} tags={tags} />\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n        </Layout>\n    )\n}\n \nexport const blogPost = graphql`\nquery RetrievePost($id: String) {\n    markdownRemark(id: {eq: $id}) {\n      frontmatter {\n        title\n        tags\n        description\n        date\n      }\n      html\n    }\n  }\n`"],"names":["StyledLink","styled","GatsbyLink","MainContainerStyles","MainLogoStyles","MainFooterStyles","Squiggly","props","color","LogoTop","LogoBottom","NameSpan","LogoH1","LogoH3","LogoH3Span","grow","alignment","fontSize","NavDivBlock","width","SpanLink","CopySpan","Layout","children","useContext","ThemeContext","theme","toggle","useEffect","document","body","classList","add","remove","to","onClick","window","history","back","type","Date","getFullYear","TagStyle","selected","TagText","Tag","bgColor","TagsContainer","toggleSelectedTag","selectedTags","tagName","setSelectedTags","includes","filter","tag","Tags","tags","clickEvent","map","PostHeading","PostHeadSubStyle","PostHeadMain","PostHeadAuthor","AuthorSpan","TagManager","BlogPost","title","description","date","nil1","nil2","navigate","replaceAll","toLowerCase","Post","data","markdownRemark","frontmatter","html","dangerouslySetInnerHTML","__html"],"sourceRoot":""}